#Types 

type Blogs{
    _id: ID!,
    Content: String!,
    Title: String!,
    Photo: String!,
    Bookmarks: Boolean!,
    Likes: Int,
    Liked: Boolean,
}


type Users{
    _id: ID!,
    Password: String!,
    Email: String!,
    Username: String!,
    FullName: String!,
}

type Response{
    success: Boolean,
    token: String,
    #This is necessary for the function of the webtoken
    errors: String,
}

#Mutations Types

input BlogCreate{
    Content: String!,
    Title: String!,
    Photo: String!,
}

input NewUser{
    Password: String!,
    Email: String!,
    Username: String!,
    FullName: String,
}


#Query

type Query{
    "Mira todos los Blogs / See all the blogs"
    getBlogs:[Blogs]
    "Mira un Blog / See a blog"
    getBlog (_id: ID!): Blogs
}

type Mutation{
    "Crear Usuario / Create User"
    createUser(input: NewUser!): Users

    "Loguearse / Login"
    loginUser( email: String! password: String! ): Response

    "Crear Blog / Create Blog"
    createBlog(input: BlogCreate!): Blogs

    "Agregar Like / Add Like"
    addLike (_id: ID!): Blogs

    "Quitar Like / Remove Like | En el futuro removere esta mutacion y mejorare la de agregar "
    removeLike (_id: ID!): Blogs

    "Agregar Bookmarks / Add Bookmarks"
    setBookmarks (_id: ID!): Blogs

    "Quitar Bookmarks / Remove Bookmarks | En el futuro removere esta mutacion y mejorare la de agregar "
    removeBookmarks (_id: ID!): Blogs

}